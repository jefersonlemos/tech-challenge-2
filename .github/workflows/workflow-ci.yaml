# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
# Remove api-mongo-ef later

name: Workflow de Continuos Integration - Blog Escola PÃºblica

#NOTES
#Builds on every push to a branch other than main, main branch builds on every pull request
on:
  push:
    branches:
      - '**'
  workflow_dispatch:


jobs:
  continuous-integration:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'
    #Cache to improve pipeline performance
    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v4
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
      name: List the state of node modules
      continue-on-error: true
      run: npm list        
    - name: Install dependencies
      run: npm install
    - name: Run tests
      run: npm run test
    - name: Build the app
      run: npm run build
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push Docker images
      id: push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          ${{ github.ref == 'refs/heads/main' && 'jefoso/blog-escola-publica:latest' || '' }}
          jefoso/blog-escola-publica:${{ github.sha }}
